webpackJsonp([1],{"8reM":function(e,n){e.exports="#define GLSLIFY 1\n//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289_1_0(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289_1_0(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute_1_1(vec3 x) {\n  return mod289_1_0(((x*34.0)+1.0)*x);\n}\n\nfloat snoise_1_2(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289_1_0(i); // Avoid truncation effects in permutation\n  vec3 p = permute_1_1( permute_1_1( i.y + vec3(0.0, i1.y, 1.0 ))\n    + i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n\n\n\nvoid main() {\n\n  float brightness = snoise_1_2(gl_FragCoord.xx);\n\n    gl_FragColor = vec4(vec3(brightness), 1.0);\n    //gl_FragColor = vec4(vec3(1.,1.,0.), 1.0);\n\n}"},TAWV:function(e,n){e.exports="#define GLSLIFY 1\nvoid main() {\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}"},eslX:function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0});i("pTlp");var t=i("Zx67"),o=i.n(t),r=i("Zrlr"),a=i.n(r),s=i("wxAW"),c=i.n(s),l=i("zwoO"),x=i.n(l),d=i("Pf15"),h=i.n(d),p=i("Ml+6"),m=(i("mUWB"),-70),u=70,_=70,w=-70,v=function(){function e(){a()(this,e),this._clock=new p.Clock,this._camera=new p.PerspectiveCamera(70,window.innerWidth/window.innerHeight,1,1e3),this._camera.position.x=-50,this._camera.position.y=10,this._camera.position.z=50,this._scene=new p.Scene,this._camera.lookAt({x:0,y:5,z:0}),this._renderer=new p.WebGLRenderer,this._renderer.setPixelRatio(window.devicePixelRatio),this._renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(this._renderer.domElement),this._controls=new p.FirstPersonControls(this._camera,this._renderer.domElement),this._controls.lookSpeed=.2,this._controls.movementSpeed=20,this._controls.noFly=!0,this._controls.lookVertical=!1,window.addEventListener("resize",this.onWindowResize.bind(this),!1)}return c()(e,[{key:"onWindowResize",value:function(){this._camera.aspect=window.innerWidth/window.innerHeight,this._camera.updateProjectionMatrix(),this._renderer.setSize(window.innerWidth,window.innerHeight)}},{key:"animate",value:function(e){requestAnimationFrame(this.animate.bind(this));var n=this._clock.getDelta();this._controls.update(n),this._camera.position.x<m&&(this._camera.position.x=m),this._camera.position.x>u&&(this._camera.position.x=u),this._camera.position.z<w&&(this._camera.position.z=w),this._camera.position.z>_&&(this._camera.position.z=_),this._renderer.render(this._scene,this._camera)}},{key:"renderer",get:function(){return this._renderer}},{key:"camera",get:function(){return this._camera}},{key:"scene",get:function(){return this._scene}}]),e}();i("TAWV"),i("8reM");new(function(e){function n(){a()(this,n);var e=x()(this,(n.__proto__||o()(n)).call(this)),i=new p.PlaneGeometry(150,150,1,1),t=(new p.TextureLoader).load("static/textures/wood5.png");t.wrapS=p.RepeatWrapping,t.wrapT=p.RepeatWrapping,t.repeat.set(8,8);var r=new p.MeshBasicMaterial({map:t,side:p.DoubleSide}),s=new p.Mesh(i,r);return s.rotation.x=-.5*Math.PI,e._scene.add(s),e.buildGalleryWalls(),e.buildDisplayArea({x:-20,y:-20}),e.buildDisplayArea({x:15,y:15}),e.buildDisplayArea({x:50,y:50}),e.loadArtWork("static/artwork/chucky.png",{x:-20,z:-4.9}),e.loadArtWork("static/artwork/final_hair_animation.gif",{x:-20,z:-70}),e.animate(),e}return h()(n,e),c()(n,[{key:"setupPlanes",value:function(){var e=new p.PlaneGeometry(30,20,0,0),n=new p.MeshBasicMaterial({color:13421772,side:p.DoubleSide}),i=new p.Mesh(e,n);i.rotation.x=0,i.position.x=15,i.position.y=10,i.position.z=0,this._scene.add(i)}},{key:"buildGalleryWalls",value:function(){for(var e=0;e<4;e++){var n=new p.PlaneGeometry(150,20,0,0),i=new p.MeshBasicMaterial({color:15921906,side:p.DoubleSide}),t=new p.Mesh(n,i);switch(t.rotation.y=e/2*Math.PI,t.position.y=10,e){case 0:t.position.x=0,t.position.z=75;break;case 1:t.position.x=-75,t.position.z=0;break;case 2:t.position.x=0,t.position.z=-75;break;case 3:t.position.x=75,t.position.z=0}this._scene.add(t)}}},{key:"buildDisplayArea",value:function(e){for(var n=0;n<4;n++){var i=new p.PlaneGeometry(30,20,0,0),t=new p.MeshBasicMaterial({color:15921906,side:p.DoubleSide}),o=new p.Mesh(i,t);switch(o.rotation.y=n/2*Math.PI,o.position.y=10,n){case 0:o.position.x=e.x,o.position.z=e.y+15;break;case 1:o.position.x=e.x+15,o.position.z=e.y;break;case 2:o.position.x=e.x,o.position.z=e.y-15;break;case 3:o.position.x=e.x-15,o.position.z=e.y}this._scene.add(o)}var r=new p.PlaneGeometry(30,30,0,0),a=new p.MeshBasicMaterial({color:13421772,side:p.DoubleSide}),s=new p.Mesh(r,a);s.position.y=10,s.position.x=e.x,s.position.z=e.y,s.rotation.x=.5*Math.PI,this._scene.add(s)}},{key:"loadArtWork",value:function(e,n){var i=this,t=new Image,o=0,r=0;e=e;t.src=e;var a=p.ImageUtils.loadTexture(t.src);a.minFilter=p.LinearFilter;var s=new p.MeshBasicMaterial({map:a,side:p.DoubleSide});t.onload=function(){o=t.width/15,r=t.height/15;var e=new p.Mesh(new p.PlaneGeometry(o,r),s);e.overdraw=!0,e.position.x=n.x,e.position.y=10,e.position.z=n.z,i._scene.add(e)},s.map.needsUpdate=!0}}]),n}(v))},pTlp:function(e,n){}},["eslX"]);
//# sourceMappingURL=app.d0056d852abb9d7b8fd4.js.map